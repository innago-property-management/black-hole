on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:  
  version:
    uses: ./.github/workflows/semver.yml
    
  security:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deno Lint
        uses: denoland/deno-lint@v1
        with:
          fail-on-warnings: true

      - name: Check for outdated dependencies (using `udd`)
        uses: actions/setup-node@v3 # Node is required for `udd`
        with:
          node-version: 23.7.0
      - run: npm install -g udd
      - run: udd --check

      - name: Check for vulnerabilities (using `npm audit` on `jsr` dependencies)
        if: ${{ matrix.package-manager == 'npm' }}
        uses: actions/setup-node@v3
        with:
          node-version: 23.7.0
        cache: 'npm'
      - run: npm ci
      - run: npm audit

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: security
    strategy:
      matrix:
        deno-version: ['2.x']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Deno ${{ matrix.deno-version }}
        uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: Run tests
        run: deno test --allow-read --allow-net --allow-env

  package-and-publish:
    name: Package and Publish
    runs-on: ubuntu-latest
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
      id-token: write # To sign with Cosign

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up cosign
        uses: sigstore/cosign-installer@main
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish container image
        uses: docker/build-push-action@v3
        env:
          VERSION: ${{ needs.version.outputs.version }}
          IMAGE_NAME: black-hole
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          tags: |
            ghcr.io/innago-property-management/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ env.VERSION }}
      - name: sign container image
        run: |
          cosign sign --key env://COSIGN_KEY ghcr.io/innago-property-management/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
        shell: bash
        env:
          COSIGN_KEY: ${{secrets.COSIGN_KEY}}
          COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
          VERSION: ${{ needs.version.outputs.version }}
          IMAGE_NAME: black-hole
